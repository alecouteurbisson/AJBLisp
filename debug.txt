;;;;;; SESSION LOG OPENED - 09 October 2006 22:35:32 GMT

************************************************************************
**  COMPILE REGEX
************************************************************************
Macro digits = (+ (- #\0 #\9))
Macro sign = (? (| #\+ #\-))
Regex space = (+ (| #\^32 #\^13 #\^10 #\^9))
Regex kw_if = "if"
Regex kw_exit = "exit"
Regex kw_class = "class"
Regex kw_exit1 = "exit1"
Regex intnum = (sign digits)
Regex fpnum = (sign digits #\. (? digits) (? (| #\e #\E) sign digits))
Regex widget = ((* "a") (| (? "ab") "c") "d")


************************************************************************
**  NFA
************************************************************************
nfa   0 = ((:eps . 56) (:eps . 35) (:eps . 28) (:eps . 22) (:eps . 16) (:eps . 11) (:eps . 8) (:eps . 1))
nfa   1 = ((#\^9 . 6) (#\^10 . 5) (#\^13 . 4) (#\^32 . 3))
nfa   2 = ((:eps . 7) (:eps . 1))
nfa   3 = ((:eps . 2))
nfa   4 = ((:eps . 2))
nfa   5 = ((:eps . 2))
nfa   6 = ((:eps . 2))
nfa   7 = ((:final . space))
nfa   8 = ((#\i . 9))
nfa   9 = ((#\f . 10))
nfa  10 = ((:final . kw_if))
nfa  11 = ((#\e . 12))
nfa  12 = ((#\x . 13))
nfa  13 = ((#\i . 14))
nfa  14 = ((#\t . 15))
nfa  15 = ((:final . kw_exit))
nfa  16 = ((#\c . 17))
nfa  17 = ((#\l . 18))
nfa  18 = ((#\a . 19))
nfa  19 = ((#\s . 20))
nfa  20 = ((#\s . 21))
nfa  21 = ((:final . kw_class))
nfa  22 = ((#\e . 23))
nfa  23 = ((#\x . 24))
nfa  24 = ((#\i . 25))
nfa  25 = ((#\t . 26))
nfa  26 = ((#\1 . 27))
nfa  27 = ((:final . kw_exit1))
nfa  28 = ((#\- . 32) (#\+ . 31) (:eps . 29))
nfa  29 = ((#\9 . 33) (#\8 . 33) (#\7 . 33) (#\6 . 33) (#\5 . 33) (#\4 . 33) (#\3 . 33) (#\2 . 33) (#\1 . 33) (#\0 . 33))
nfa  30 = ((:eps . 29))
nfa  31 = ((:eps . 30))
nfa  32 = ((:eps . 30))
nfa  33 = ((:eps . 34) (:eps . 29))
nfa  34 = ((:final . intnum))
nfa  35 = ((#\- . 39) (#\+ . 38) (:eps . 36))
nfa  36 = ((#\9 . 40) (#\8 . 40) (#\7 . 40) (#\6 . 40) (#\5 . 40) (#\4 . 40) (#\3 . 40) (#\2 . 40) (#\1 . 40) (#\0 . 40))
nfa  37 = ((:eps . 36))
nfa  38 = ((:eps . 37))
nfa  39 = ((:eps . 37))
nfa  40 = ((:eps . 41) (:eps . 36))
nfa  41 = ((#\. . 42))
nfa  42 = ((#\9 . 44) (#\8 . 44) (#\7 . 44) (#\6 . 44) (#\5 . 44) (#\4 . 44) (#\3 . 44) (#\2 . 44) (#\1 . 44) (#\0 . 44) (:eps . 43))
nfa  43 = ((#\E . 49) (#\e . 48) (:eps . 46))
nfa  44 = ((:eps . 45) (:eps . 42))
nfa  45 = ((:eps . 43))
nfa  46 = ((:final . fpnum))
nfa  47 = ((#\- . 53) (#\+ . 52) (:eps . 50))
nfa  48 = ((:eps . 47))
nfa  49 = ((:eps . 47))
nfa  50 = ((#\9 . 54) (#\8 . 54) (#\7 . 54) (#\6 . 54) (#\5 . 54) (#\4 . 54) (#\3 . 54) (#\2 . 54) (#\1 . 54) (#\0 . 54))
nfa  51 = ((:eps . 50))
nfa  52 = ((:eps . 51))
nfa  53 = ((:eps . 51))
nfa  54 = ((:eps . 55) (:eps . 50))
nfa  55 = ((:eps . 46))
nfa  56 = ((:eps . 58))
nfa  57 = ((#\a . 58))
nfa  58 = ((#\c . 63) (#\a . 61) (:eps . 60) (:eps . 57))
nfa  59 = ((#\d . 64))
nfa  60 = ((:eps . 59))
nfa  61 = ((#\b . 62))
nfa  62 = ((:eps . 60))
nfa  63 = ((:eps . 59))
nfa  64 = ((:final . widget))


************************************************************************
**  DFA
************************************************************************
state   0 = nil
trans   0 = nil
state   1 = (0 1 8 11 16 22 28 29 35 36 56 57 58 59 60)
trans   1 = ((#\d . 13) (#\a . 12) (#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11) (#\+ . 10) (#\- . 9) (#\c . 8) (#\e . 7) (#\i . 6) (#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2))
state   2 = (1 2 6 7)
trans   2 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   3 = (1 2 5 7)
trans   3 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   4 = (1 2 4 7)
trans   4 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   5 = (1 2 3 7)
trans   5 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   6 = (9)
trans   6 = ((#\f . 14))
state   7 = (12 23)
trans   7 = ((#\x . 15))
state   8 = (17 59 63)
trans   8 = ((#\d . 13) (#\l . 16))
state   9 = (29 30 32 36 37 39)
trans   9 = ((#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11))
state  10 = (29 30 31 36 37 38)
trans  10 = ((#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11))
state  11 = (29 33 34 36 40 41)
trans  11 = ((#\. . 17) (#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11) (:final . intnum))
state  12 = (57 58 59 60 61)
trans  12 = ((#\b . 19) (#\d . 13) (#\c . 18) (#\a . 12))
state  13 = (64)
trans  13 = ((:final . widget))
state  14 = (10)
trans  14 = ((:final . kw_if))
state  15 = (13 24)
trans  15 = ((#\i . 20))
state  16 = (18)
trans  16 = ((#\a . 21))
state  17 = (42 43 46)
trans  17 = ((#\e . 24) (#\E . 23) (#\0 . 22) (#\1 . 22) (#\2 . 22) (#\3 . 22) (#\4 . 22) (#\5 . 22) (#\6 . 22) (#\7 . 22) (#\8 . 22) (#\9 . 22) (:final . fpnum))
state  18 = (59 63)
trans  18 = ((#\d . 13))
state  19 = (59 60 62)
trans  19 = ((#\d . 13))
state  20 = (14 25)
trans  20 = ((#\t . 25))
state  21 = (19)
trans  21 = ((#\s . 26))
state  22 = (42 43 44 45 46)
trans  22 = ((#\e . 24) (#\E . 23) (#\0 . 22) (#\1 . 22) (#\2 . 22) (#\3 . 22) (#\4 . 22) (#\5 . 22) (#\6 . 22) (#\7 . 22) (#\8 . 22) (#\9 . 22) (:final . fpnum))
state  23 = (47 49 50)
trans  23 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29) (#\+ . 28) (#\- . 27))
state  24 = (47 48 50)
trans  24 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29) (#\+ . 28) (#\- . 27))
state  25 = (15 26)
trans  25 = ((#\1 . 30) (:final . kw_exit))
state  26 = (20)
trans  26 = ((#\s . 31))
state  27 = (50 51 53)
trans  27 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29))
state  28 = (50 51 52)
trans  28 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29))
state  29 = (46 50 54 55)
trans  29 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29) (:final . fpnum))
state  30 = (27)
trans  30 = ((:final . kw_exit1))
state  31 = (21)
trans  31 = ((:final . kw_class))

************************************************************************
**  TEST
************************************************************************
(parsing "1")  ->
    ((intnum . "1"))
(parsing ".1")  ->
    ((:fail 1 #\.))
(parsing "+1")  ->
    ((intnum . "+1"))
(parsing "-1")  ->
    ((intnum . "-1"))
(parsing "1.5")  ->
    ((fpnum . "1.5"))
(parsing "+1.5")  ->
    ((fpnum . "+1.5"))
(parsing "-1.5")  ->
    ((fpnum . "-1.5"))
(parsing "12.3e-4")  ->
    ((fpnum . "12.3e-4"))
(parsing "12.E4")  ->
    ((fpnum . "12.E4"))
(parsing "12e4")  ->
    ((intnum . "12") (:fail 7 #\4))
(parsing "12e")  ->
    ((intnum . "12") (:fail 7 :eol))
(parsing "123456.35265")  ->
    ((fpnum . "123456.35265"))
(parsing "+123456.35265")  ->
    ((fpnum . "+123456.35265"))
(parsing "-123456.35265")  ->
    ((fpnum . "-123456.35265"))
(parsing "12+3456.35265")  ->
    ((intnum . "12") (fpnum . "+3456.35265"))
(parsing "123 456.35 2+65")  ->
    ((intnum . "123") (space . " ") (fpnum . "456.35") (space . " ") (intnum . "2") (intnum . "+65"))
(parsing "123456.352.65")  ->
    ((fpnum . "123456.352") (:fail 1 #\.))
(parsing "123a456.35265")  ->
    ((intnum . "123") (:fail 12 #\4))
(parsing "1234 56.35265.")  ->
    ((intnum . "1234") (space . " ") (fpnum . "56.35265") (:fail 1 #\.))
(parsing "exit    1234")  ->
    ((kw_exit . "exit") (space . "    ") (intnum . "1234"))
(parsing "exit11")  ->
    ((kw_exit1 . "exit1") (intnum . "1"))
(parsing "exit21")  ->
    ((kw_exit . "exit") (intnum . "21"))
(parsing "frobozz 1234")  ->
    ((:fail 1 #\f))
(parsing "12+13.5-2")  ->
    ((intnum . "12") (fpnum . "+13.5") (intnum . "-2"))
(parsing "aaaacd")  ->
    ((widget . "aaaacd"))
(parsing "aaaabd")  ->
    ((widget . "aaaabd"))
(parsing "aaabcd")  ->
    ((:fail 19 #\c))
(parsing "abd")  ->
    ((widget . "abd"))
(parsing "bd")  ->
    ((:fail 1 #\b))
(parsing "abcd")  ->
    ((:fail 19 #\c))
(parsing "cd")  ->
    ((widget . "cd"))
;;;;;; SESSION LOG CLOSED - 09 October 2006 22:35:33 GMT
;;;;;; SESSION LOG OPENED - 10 November 2007 19:50:39 GMT

************************************************************************
**  COMPILE REGEX
************************************************************************
Macro digits = (+ (- #\0 #\9))
Macro sign = (? (| #\+ #\-))
Regex space = (+ (| #\^32 #\^13 #\^10 #\^9))
Regex kw_if = "if"
Regex kw_exit = "exit"
Regex kw_class = "class"
Regex kw_exit1 = "exit1"
Regex intnum = (sign digits)
Regex fpnum = (sign digits #\. (? digits) (? (| #\e #\E) sign digits))
Regex widget = ((* "a") (| (? "ab") "c") "d")


************************************************************************
**  NFA
************************************************************************
nfa   0 = ((:eps . 56) (:eps . 35) (:eps . 28) (:eps . 22) (:eps . 16) (:eps . 11) (:eps . 8) (:eps . 1))
nfa   1 = ((#\^9 . 6) (#\^10 . 5) (#\^13 . 4) (#\^32 . 3))
nfa   2 = ((:eps . 7) (:eps . 1))
nfa   3 = ((:eps . 2))
nfa   4 = ((:eps . 2))
nfa   5 = ((:eps . 2))
nfa   6 = ((:eps . 2))
nfa   7 = ((:final . space))
nfa   8 = ((#\i . 9))
nfa   9 = ((#\f . 10))
nfa  10 = ((:final . kw_if))
nfa  11 = ((#\e . 12))
nfa  12 = ((#\x . 13))
nfa  13 = ((#\i . 14))
nfa  14 = ((#\t . 15))
nfa  15 = ((:final . kw_exit))
nfa  16 = ((#\c . 17))
nfa  17 = ((#\l . 18))
nfa  18 = ((#\a . 19))
nfa  19 = ((#\s . 20))
nfa  20 = ((#\s . 21))
nfa  21 = ((:final . kw_class))
nfa  22 = ((#\e . 23))
nfa  23 = ((#\x . 24))
nfa  24 = ((#\i . 25))
nfa  25 = ((#\t . 26))
nfa  26 = ((#\1 . 27))
nfa  27 = ((:final . kw_exit1))
nfa  28 = ((#\- . 32) (#\+ . 31) (:eps . 29))
nfa  29 = ((#\9 . 33) (#\8 . 33) (#\7 . 33) (#\6 . 33) (#\5 . 33) (#\4 . 33) (#\3 . 33) (#\2 . 33) (#\1 . 33) (#\0 . 33))
nfa  30 = ((:eps . 29))
nfa  31 = ((:eps . 30))
nfa  32 = ((:eps . 30))
nfa  33 = ((:eps . 34) (:eps . 29))
nfa  34 = ((:final . intnum))
nfa  35 = ((#\- . 39) (#\+ . 38) (:eps . 36))
nfa  36 = ((#\9 . 40) (#\8 . 40) (#\7 . 40) (#\6 . 40) (#\5 . 40) (#\4 . 40) (#\3 . 40) (#\2 . 40) (#\1 . 40) (#\0 . 40))
nfa  37 = ((:eps . 36))
nfa  38 = ((:eps . 37))
nfa  39 = ((:eps . 37))
nfa  40 = ((:eps . 41) (:eps . 36))
nfa  41 = ((#\. . 42))
nfa  42 = ((#\9 . 44) (#\8 . 44) (#\7 . 44) (#\6 . 44) (#\5 . 44) (#\4 . 44) (#\3 . 44) (#\2 . 44) (#\1 . 44) (#\0 . 44) (:eps . 43))
nfa  43 = ((#\E . 49) (#\e . 48) (:eps . 46))
nfa  44 = ((:eps . 45) (:eps . 42))
nfa  45 = ((:eps . 43))
nfa  46 = ((:final . fpnum))
nfa  47 = ((#\- . 53) (#\+ . 52) (:eps . 50))
nfa  48 = ((:eps . 47))
nfa  49 = ((:eps . 47))
nfa  50 = ((#\9 . 54) (#\8 . 54) (#\7 . 54) (#\6 . 54) (#\5 . 54) (#\4 . 54) (#\3 . 54) (#\2 . 54) (#\1 . 54) (#\0 . 54))
nfa  51 = ((:eps . 50))
nfa  52 = ((:eps . 51))
nfa  53 = ((:eps . 51))
nfa  54 = ((:eps . 55) (:eps . 50))
nfa  55 = ((:eps . 46))
nfa  56 = ((:eps . 58))
nfa  57 = ((#\a . 58))
nfa  58 = ((#\c . 63) (#\a . 61) (:eps . 60) (:eps . 57))
nfa  59 = ((#\d . 64))
nfa  60 = ((:eps . 59))
nfa  61 = ((#\b . 62))
nfa  62 = ((:eps . 60))
nfa  63 = ((:eps . 59))
nfa  64 = ((:final . widget))


************************************************************************
**  DFA
************************************************************************
state   0 = nil
trans   0 = nil
state   1 = (0 1 8 11 16 22 28 29 35 36 56 57 58 59 60)
trans   1 = ((#\d . 13) (#\a . 12) (#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11) (#\+ . 10) (#\- . 9) (#\c . 8) (#\e . 7) (#\i . 6) (#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2))
state   2 = (1 2 6 7)
trans   2 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   3 = (1 2 5 7)
trans   3 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   4 = (1 2 4 7)
trans   4 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   5 = (1 2 3 7)
trans   5 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   6 = (9)
trans   6 = ((#\f . 14))
state   7 = (12 23)
trans   7 = ((#\x . 15))
state   8 = (17 59 63)
trans   8 = ((#\d . 13) (#\l . 16))
state   9 = (29 30 32 36 37 39)
trans   9 = ((#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11))
state  10 = (29 30 31 36 37 38)
trans  10 = ((#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11))
state  11 = (29 33 34 36 40 41)
trans  11 = ((#\. . 17) (#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11) (:final . intnum))
state  12 = (57 58 59 60 61)
trans  12 = ((#\b . 19) (#\d . 13) (#\c . 18) (#\a . 12))
state  13 = (64)
trans  13 = ((:final . widget))
state  14 = (10)
trans  14 = ((:final . kw_if))
state  15 = (13 24)
trans  15 = ((#\i . 20))
state  16 = (18)
trans  16 = ((#\a . 21))
state  17 = (42 43 46)
trans  17 = ((#\e . 24) (#\E . 23) (#\0 . 22) (#\1 . 22) (#\2 . 22) (#\3 . 22) (#\4 . 22) (#\5 . 22) (#\6 . 22) (#\7 . 22) (#\8 . 22) (#\9 . 22) (:final . fpnum))
state  18 = (59 63)
trans  18 = ((#\d . 13))
state  19 = (59 60 62)
trans  19 = ((#\d . 13))
state  20 = (14 25)
trans  20 = ((#\t . 25))
state  21 = (19)
trans  21 = ((#\s . 26))
state  22 = (42 43 44 45 46)
trans  22 = ((#\e . 24) (#\E . 23) (#\0 . 22) (#\1 . 22) (#\2 . 22) (#\3 . 22) (#\4 . 22) (#\5 . 22) (#\6 . 22) (#\7 . 22) (#\8 . 22) (#\9 . 22) (:final . fpnum))
state  23 = (47 49 50)
trans  23 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29) (#\+ . 28) (#\- . 27))
state  24 = (47 48 50)
trans  24 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29) (#\+ . 28) (#\- . 27))
state  25 = (15 26)
trans  25 = ((#\1 . 30) (:final . kw_exit))
state  26 = (20)
trans  26 = ((#\s . 31))
state  27 = (50 51 53)
trans  27 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29))
state  28 = (50 51 52)
trans  28 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29))
state  29 = (46 50 54 55)
trans  29 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29) (:final . fpnum))
state  30 = (27)
trans  30 = ((:final . kw_exit1))
state  31 = (21)
trans  31 = ((:final . kw_class))

************************************************************************
**  TEST
************************************************************************
(parsing "1")  ->
    ((intnum . "1"))
(parsing ".1")  ->
    ((:fail 1 #\.))
(parsing "+1")  ->
    ((intnum . "+1"))
(parsing "-1")  ->
    ((intnum . "-1"))
(parsing "1.5")  ->
    ((fpnum . "1.5"))
(parsing "+1.5")  ->
    ((fpnum . "+1.5"))
(parsing "-1.5")  ->
    ((fpnum . "-1.5"))
(parsing "12.3e-4")  ->
    ((fpnum . "12.3e-4"))
(parsing "12.E4")  ->
    ((fpnum . "12.E4"))
(parsing "12e4")  ->
    ((intnum . "12") (:fail 7 #\4))
(parsing "12e")  ->
    ((intnum . "12") (:fail 7 :eol))
(parsing "123456.35265")  ->
    ((fpnum . "123456.35265"))
(parsing "+123456.35265")  ->
    ((fpnum . "+123456.35265"))
(parsing "-123456.35265")  ->
    ((fpnum . "-123456.35265"))
(parsing "12+3456.35265")  ->
    ((intnum . "12") (fpnum . "+3456.35265"))
(parsing "123 456.35 2+65")  ->
    ((intnum . "123") (space . " ") (fpnum . "456.35") (space . " ") (intnum . "2") (intnum . "+65"))
(parsing "123456.352.65")  ->
    ((fpnum . "123456.352") (:fail 1 #\.))
(parsing "123a456.35265")  ->
    ((intnum . "123") (:fail 12 #\4))
(parsing "1234 56.35265.")  ->
    ((intnum . "1234") (space . " ") (fpnum . "56.35265") (:fail 1 #\.))
(parsing "exit    1234")  ->
    ((kw_exit . "exit") (space . "    ") (intnum . "1234"))
(parsing "exit11")  ->
    ((kw_exit1 . "exit1") (intnum . "1"))
(parsing "exit21")  ->
    ((kw_exit . "exit") (intnum . "21"))
(parsing "frobozz 1234")  ->
    ((:fail 1 #\f))
(parsing "12+13.5-2")  ->
    ((intnum . "12") (fpnum . "+13.5") (intnum . "-2"))
(parsing "aaaacd")  ->
    ((widget . "aaaacd"))
(parsing "aaaabd")  ->
    ((widget . "aaaabd"))
(parsing "aaabcd")  ->
    ((:fail 19 #\c))
(parsing "abd")  ->
    ((widget . "abd"))
(parsing "bd")  ->
    ((:fail 1 #\b))
(parsing "abcd")  ->
    ((:fail 19 #\c))
(parsing "cd")  ->
    ((widget . "cd"))
;;;;;; SESSION LOG CLOSED - 10 November 2007 19:50:39 GMT
;;;;;; SESSION LOG OPENED - 16 November 2009 20:24:31 GMT

************************************************************************
**  COMPILE REGEX
************************************************************************
Macro digits = (+ (- #\0 #\9))
Macro sign = (? (| #\+ #\-))
Regex space = (+ (| #\^32 #\^13 #\^10 #\^9))
Regex kw_if = "if"
Regex kw_exit = "exit"
Regex kw_class = "class"
Regex kw_exit1 = "exit1"
Regex intnum = (sign digits)
Regex fpnum = (sign digits #\. (? digits) (? (| #\e #\E) sign digits))
Regex widget = ((* "a") (| (? "ab") "c") "d")


************************************************************************
**  NFA
************************************************************************
nfa   0 = ((:eps . 56) (:eps . 35) (:eps . 28) (:eps . 22) (:eps . 16) (:eps . 11) (:eps . 8) (:eps . 1))
nfa   1 = ((#\^9 . 6) (#\^10 . 5) (#\^13 . 4) (#\^32 . 3))
nfa   2 = ((:eps . 7) (:eps . 1))
nfa   3 = ((:eps . 2))
nfa   4 = ((:eps . 2))
nfa   5 = ((:eps . 2))
nfa   6 = ((:eps . 2))
nfa   7 = ((:final . space))
nfa   8 = ((#\i . 9))
nfa   9 = ((#\f . 10))
nfa  10 = ((:final . kw_if))
nfa  11 = ((#\e . 12))
nfa  12 = ((#\x . 13))
nfa  13 = ((#\i . 14))
nfa  14 = ((#\t . 15))
nfa  15 = ((:final . kw_exit))
nfa  16 = ((#\c . 17))
nfa  17 = ((#\l . 18))
nfa  18 = ((#\a . 19))
nfa  19 = ((#\s . 20))
nfa  20 = ((#\s . 21))
nfa  21 = ((:final . kw_class))
nfa  22 = ((#\e . 23))
nfa  23 = ((#\x . 24))
nfa  24 = ((#\i . 25))
nfa  25 = ((#\t . 26))
nfa  26 = ((#\1 . 27))
nfa  27 = ((:final . kw_exit1))
nfa  28 = ((#\- . 32) (#\+ . 31) (:eps . 29))
nfa  29 = ((#\9 . 33) (#\8 . 33) (#\7 . 33) (#\6 . 33) (#\5 . 33) (#\4 . 33) (#\3 . 33) (#\2 . 33) (#\1 . 33) (#\0 . 33))
nfa  30 = ((:eps . 29))
nfa  31 = ((:eps . 30))
nfa  32 = ((:eps . 30))
nfa  33 = ((:eps . 34) (:eps . 29))
nfa  34 = ((:final . intnum))
nfa  35 = ((#\- . 39) (#\+ . 38) (:eps . 36))
nfa  36 = ((#\9 . 40) (#\8 . 40) (#\7 . 40) (#\6 . 40) (#\5 . 40) (#\4 . 40) (#\3 . 40) (#\2 . 40) (#\1 . 40) (#\0 . 40))
nfa  37 = ((:eps . 36))
nfa  38 = ((:eps . 37))
nfa  39 = ((:eps . 37))
nfa  40 = ((:eps . 41) (:eps . 36))
nfa  41 = ((#\. . 42))
nfa  42 = ((#\9 . 44) (#\8 . 44) (#\7 . 44) (#\6 . 44) (#\5 . 44) (#\4 . 44) (#\3 . 44) (#\2 . 44) (#\1 . 44) (#\0 . 44) (:eps . 43))
nfa  43 = ((#\E . 49) (#\e . 48) (:eps . 46))
nfa  44 = ((:eps . 45) (:eps . 42))
nfa  45 = ((:eps . 43))
nfa  46 = ((:final . fpnum))
nfa  47 = ((#\- . 53) (#\+ . 52) (:eps . 50))
nfa  48 = ((:eps . 47))
nfa  49 = ((:eps . 47))
nfa  50 = ((#\9 . 54) (#\8 . 54) (#\7 . 54) (#\6 . 54) (#\5 . 54) (#\4 . 54) (#\3 . 54) (#\2 . 54) (#\1 . 54) (#\0 . 54))
nfa  51 = ((:eps . 50))
nfa  52 = ((:eps . 51))
nfa  53 = ((:eps . 51))
nfa  54 = ((:eps . 55) (:eps . 50))
nfa  55 = ((:eps . 46))
nfa  56 = ((:eps . 58))
nfa  57 = ((#\a . 58))
nfa  58 = ((#\c . 63) (#\a . 61) (:eps . 60) (:eps . 57))
nfa  59 = ((#\d . 64))
nfa  60 = ((:eps . 59))
nfa  61 = ((#\b . 62))
nfa  62 = ((:eps . 60))
nfa  63 = ((:eps . 59))
nfa  64 = ((:final . widget))


************************************************************************
**  DFA
************************************************************************
state   0 = nil
trans   0 = nil
state   1 = (0 1 8 11 16 22 28 29 35 36 56 57 58 59 60)
trans   1 = ((#\d . 13) (#\a . 12) (#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11) (#\+ . 10) (#\- . 9) (#\c . 8) (#\e . 7) (#\i . 6) (#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2))
state   2 = (1 2 6 7)
trans   2 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   3 = (1 2 5 7)
trans   3 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   4 = (1 2 4 7)
trans   4 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   5 = (1 2 3 7)
trans   5 = ((#\^32 . 5) (#\^13 . 4) (#\^10 . 3) (#\^9 . 2) (:final . space))
state   6 = (9)
trans   6 = ((#\f . 14))
state   7 = (12 23)
trans   7 = ((#\x . 15))
state   8 = (17 59 63)
trans   8 = ((#\d . 13) (#\l . 16))
state   9 = (29 30 32 36 37 39)
trans   9 = ((#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11))
state  10 = (29 30 31 36 37 38)
trans  10 = ((#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11))
state  11 = (29 33 34 36 40 41)
trans  11 = ((#\. . 17) (#\0 . 11) (#\1 . 11) (#\2 . 11) (#\3 . 11) (#\4 . 11) (#\5 . 11) (#\6 . 11) (#\7 . 11) (#\8 . 11) (#\9 . 11) (:final . intnum))
state  12 = (57 58 59 60 61)
trans  12 = ((#\b . 19) (#\d . 13) (#\c . 18) (#\a . 12))
state  13 = (64)
trans  13 = ((:final . widget))
state  14 = (10)
trans  14 = ((:final . kw_if))
state  15 = (13 24)
trans  15 = ((#\i . 20))
state  16 = (18)
trans  16 = ((#\a . 21))
state  17 = (42 43 46)
trans  17 = ((#\e . 24) (#\E . 23) (#\0 . 22) (#\1 . 22) (#\2 . 22) (#\3 . 22) (#\4 . 22) (#\5 . 22) (#\6 . 22) (#\7 . 22) (#\8 . 22) (#\9 . 22) (:final . fpnum))
state  18 = (59 63)
trans  18 = ((#\d . 13))
state  19 = (59 60 62)
trans  19 = ((#\d . 13))
state  20 = (14 25)
trans  20 = ((#\t . 25))
state  21 = (19)
trans  21 = ((#\s . 26))
state  22 = (42 43 44 45 46)
trans  22 = ((#\e . 24) (#\E . 23) (#\0 . 22) (#\1 . 22) (#\2 . 22) (#\3 . 22) (#\4 . 22) (#\5 . 22) (#\6 . 22) (#\7 . 22) (#\8 . 22) (#\9 . 22) (:final . fpnum))
state  23 = (47 49 50)
trans  23 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29) (#\+ . 28) (#\- . 27))
state  24 = (47 48 50)
trans  24 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29) (#\+ . 28) (#\- . 27))
state  25 = (15 26)
trans  25 = ((#\1 . 30) (:final . kw_exit))
state  26 = (20)
trans  26 = ((#\s . 31))
state  27 = (50 51 53)
trans  27 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29))
state  28 = (50 51 52)
trans  28 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29))
state  29 = (46 50 54 55)
trans  29 = ((#\0 . 29) (#\1 . 29) (#\2 . 29) (#\3 . 29) (#\4 . 29) (#\5 . 29) (#\6 . 29) (#\7 . 29) (#\8 . 29) (#\9 . 29) (:final . fpnum))
state  30 = (27)
trans  30 = ((:final . kw_exit1))
state  31 = (21)
trans  31 = ((:final . kw_class))

************************************************************************
**  TEST
************************************************************************
(parsing "1")  ->
    ((intnum . "1"))
(parsing ".1")  ->
    ((:fail 1 #\.))
(parsing "+1")  ->
    ((intnum . "+1"))
(parsing "-1")  ->
    ((intnum . "-1"))
(parsing "1.5")  ->
    ((fpnum . "1.5"))
(parsing "+1.5")  ->
    ((fpnum . "+1.5"))
(parsing "-1.5")  ->
    ((fpnum . "-1.5"))
(parsing "12.3e-4")  ->
    ((fpnum . "12.3e-4"))
(parsing "12.E4")  ->
    ((fpnum . "12.E4"))
(parsing "12e4")  ->
    ((intnum . "12") (:fail 7 #\4))
(parsing "12e")  ->
    ((intnum . "12") (:fail 7 :eol))
(parsing "123456.35265")  ->
    ((fpnum . "123456.35265"))
(parsing "+123456.35265")  ->
    ((fpnum . "+123456.35265"))
(parsing "-123456.35265")  ->
    ((fpnum . "-123456.35265"))
(parsing "12+3456.35265")  ->
    ((intnum . "12") (fpnum . "+3456.35265"))
(parsing "123 456.35 2+65")  ->
    ((intnum . "123") (space . " ") (fpnum . "456.35") (space . " ") (intnum . "2") (intnum . "+65"))
(parsing "123456.352.65")  ->
    ((fpnum . "123456.352") (:fail 1 #\.))
(parsing "123a456.35265")  ->
    ((intnum . "123") (:fail 12 #\4))
(parsing "1234 56.35265.")  ->
    ((intnum . "1234") (space . " ") (fpnum . "56.35265") (:fail 1 #\.))
(parsing "exit    1234")  ->
    ((kw_exit . "exit") (space . "    ") (intnum . "1234"))
(parsing "exit11")  ->
    ((kw_exit1 . "exit1") (intnum . "1"))
(parsing "exit21")  ->
    ((kw_exit . "exit") (intnum . "21"))
(parsing "frobozz 1234")  ->
    ((:fail 1 #\f))
(parsing "12+13.5-2")  ->
    ((intnum . "12") (fpnum . "+13.5") (intnum . "-2"))
(parsing "aaaacd")  ->
    ((widget . "aaaacd"))
(parsing "aaaabd")  ->
    ((widget . "aaaabd"))
(parsing "aaabcd")  ->
    ((:fail 19 #\c))
(parsing "abd")  ->
    ((widget . "abd"))
(parsing "bd")  ->
    ((:fail 1 #\b))
(parsing "abcd")  ->
    ((:fail 19 #\c))
(parsing "cd")  ->
    ((widget . "cd"))
;;;;;; SESSION LOG CLOSED - 16 November 2009 20:24:34 GMT
